version: '3.8'

services:
  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    restart: always
    depends_on:
      - mongodb
      - rabbitmq
    environment:
      - NODE_ENV=production
      - PORT=3000
      - MONGO_URI=mongodb://mongodb:27017/zapstorm
      - RABBITMQ_URI=amqp://rabbitmq:5672
      - JWT_SECRET=YOUR_SECRET_KEY_HERE
    volumes:
      - ./backend/uploads:/app/uploads
      - ./backend/logs:/app/logs
    ports:
      - "3000:3000"
    networks:
      - zapstorm-network

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    restart: always
    ports:
      - "80:80"
    networks:
      - zapstorm-network
    depends_on:
      - backend

  # Message Worker (processamento de mensagens)
  message-worker:
    build:
      context: ./backend
      dockerfile: Dockerfile.worker
    restart: always
    command: node src/workers/messageWorker.js
    depends_on:
      - mongodb
      - rabbitmq
    environment:
      - NODE_ENV=production
      - MONGO_URI=mongodb://mongodb:27017/zapstorm
      - RABBITMQ_URI=amqp://rabbitmq:5672
      - MESSAGE_WORKER_CONCURRENCY=5
    volumes:
      - ./backend/logs:/app/logs
    networks:
      - zapstorm-network

  # Webhook Worker (processamento de webhooks)
  webhook-worker:
    build:
      context: ./backend
      dockerfile: Dockerfile.worker
    restart: always
    command: node src/workers/webhookWorker.js
    depends_on:
      - mongodb
      - rabbitmq
    environment:
      - NODE_ENV=production
      - MONGO_URI=mongodb://mongodb:27017/zapstorm
      - RABBITMQ_URI=amqp://rabbitmq:5672
      - WEBHOOK_WORKER_CONCURRENCY=10
    volumes:
      - ./backend/logs:/app/logs
    networks:
      - zapstorm-network

  # MongoDB
  mongodb:
    image: mongo:5.0
    restart: always
    volumes:
      - mongodb-data:/data/db
    networks:
      - zapstorm-network

  # RabbitMQ
  rabbitmq:
    image: rabbitmq:3.9-management
    restart: always
    ports:
      - "15672:15672"  # Management UI
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
    networks:
      - zapstorm-network

volumes:
  mongodb-data:
  rabbitmq-data:

networks:
  zapstorm-network: 